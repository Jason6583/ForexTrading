<ResourceDictionary x:Class="ForexTrading.StylesDictionary"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ForexTrading"
                    >

    <SolidColorBrush x:Key="GrayBlack" Color="#FF191919"/>
    <SolidColorBrush x:Key="GrayBlackDarker" Color="#FF151515"/>
    <SolidColorBrush x:Key="GrayBlackLighterWithOpacity" Color="#3F252525"/>
    <SolidColorBrush x:Key="GrayBlackLighterWithHigherOpacity" Color="#AF252525"/>
    <SolidColorBrush x:Key="GrayBlackLighter" Color="#FF454545"/>
    <SolidColorBrush x:Key="GrayBlackLighterer" Color="#FF909090"/>

    <SolidColorBrush x:Key="LightGold" Color="#FFFFEECA"/>
    <SolidColorBrush x:Key="LightLighter" Color="#FFFFF4DE"/>

    <Color x:Key="LightGoldColor" R="255" G="238" B="202" A="255"/>
    <Color x:Key="LightLighterColor" A="255" R="255" G="244" B="222" />

    <local:MainWindow x:Key="MainWindow"/>

    <Style x:Key="ActiveAssetGridStyle" TargetType="{x:Type Grid}">
        <Style.Triggers>
            <Trigger Value="true" Property="IsMouseOver">
                <Setter Property="Background" Value="#AF252525"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--DataTemplates-->
    <DataTemplate x:Key="ActiveAssetsTemplate">
        <Grid Style="{DynamicResource ActiveAssetGridStyle}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>


                <TextBlock Margin="5,0,0,0" Style="{DynamicResource ClassicTextBlockStyle}" TextAlignment="Left" Grid.Column="0">
                <Run Text="{Binding [0]}" Foreground="{DynamicResource GrayBlackLighterer}"/>
                <LineBreak/>
                <Run Text="{Binding [1]}" Foreground="{DynamicResource GrayBlackLighterer}"/>
                </TextBlock>


                <TextBlock Margin="5,0,0,0"
                       Style="{DynamicResource ClassicTextBlockStyle}"  
                       TextAlignment="Left" 
                       Grid.Column="1">
                <Run Text="{Binding [2]}" Foreground="{DynamicResource GrayBlackLighterer}"
                     x:Name="TradingPair"/>
                <LineBreak/>
                <Run Text="{Binding [3]}" 
                     FontSize="15"
                     Foreground="{DynamicResource LightLighter}"/>

                </TextBlock>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock
                       Style="{DynamicResource ClassicTextBlockStyle}" 
                       TextAlignment="Right" 
                       Grid.Row="0" >
                <Run Text="{Binding [4], StringFormat={}{0} €}" 
                     FontSize="15"
                     >
                    <Run.Foreground>
                        <MultiBinding Converter="{local:IsLessThanConverter}">
                            <Binding Path="[2]"/>
                            <Binding  Path="[3]"/>
                        </MultiBinding>
                    </Run.Foreground>
                </Run>
                    <LineBreak/>
                 <Run Text="{Binding [5], StringFormat={}{0} %}" 
                         FontSize="15">
                        <Run.Foreground>
                            <MultiBinding Converter="{local:IsLessThanConverter}">
                                <Binding Path="[2]"/>
                                <Binding  Path="[3]"/>
                            </MultiBinding>
                        </Run.Foreground>
                    </Run>
                    </TextBlock>
                </Grid>
            </Grid>

            <TextBlock Text="SELL INVESTMENT" 
                      Style="{DynamicResource MenuTextBlockWihtoutAnimationStyle}"
                       Grid.Row="1" 
                       HorizontalAlignment="Center"
                       FontSize="12"
                       Margin="0,10,0,0"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TotalPortfolioTemplate">
        <Grid Style="{DynamicResource ActiveAssetGridStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Margin="5,0,0,0" Style="{DynamicResource ClassicTextBlockStyle}"
                       TextAlignment="Left" Grid.Column="0"
                       Foreground="{DynamicResource GrayBlackLighterer}" >
                <Run Text="Count of investments"/>
                <LineBreak/>
                <Run Text="{Binding [0]}" Foreground="{DynamicResource LightLighter}"/>
                
                <LineBreak/>
                <Run Text="Total investment"/>
                <LineBreak/>
                <Run Text="{Binding [1]}" Foreground="{DynamicResource LightLighter}"/>
            </TextBlock>

            <Grid Grid.Column="1" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <TextBlock
                       Style="{DynamicResource ClassicTextBlockStyle}" 
                       TextAlignment="Right" 
                        Grid.Row="0" 
                        HorizontalAlignment="Right"
                         FontSize="20"
                       >
                        <Run Text="{Binding [2], StringFormat={}{0} €}" 
                             Foreground="{Binding [2], Converter={local:TotalSumConverter}}"/>

                        <LineBreak/>

                        <Run Text="{Binding [3], StringFormat={}{0} %}" 
                             Foreground="{Binding [2], Converter={local:TotalSumConverter}}"/>

                </TextBlock>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MenuItemTemplate">
        <TextBlock Margin="5" Style="{DynamicResource MenuTextBlockStyle}" 
                   TextAlignment="Center" 
                   FontSize="17"  
                   MouseLeftButtonDown="LeftMouseDown"
                   >
                <Run Text="{Binding [0]}" />
                <LineBreak/>
                <Run Text="{Binding [1]}" />
        </TextBlock>
    </DataTemplate>

    <!--ListViewItem style, remove default style-->
    <Style x:Key="LvItemStyle" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="border" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">

                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">

                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBlock styles-->
    <Style x:Key="ClassicTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource LightGold}"/>
    </Style>

    <!--Menu style-->
    <Style x:Key="MenuTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource GrayBlackLighter}"/>
        <Setter Property="FontWeight" Value="Thin"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>

            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:0:0.3" Storyboard.TargetProperty="Foreground.Color" To="#FFFFEECA"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:0:0.3" Storyboard.TargetProperty="Foreground.Color" To="#FF454545"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!--Withou animation-->
    <Style x:Key="MenuTextBlockWihtoutAnimationStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource GrayBlackLighterer}"/>
        <Setter Property="FontWeight" Value="Thin"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Selected menu style-->
    <Style x:Key="SelectedMenuTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource GrayBlackLighterer}"/>
        <Setter Property="FontWeight" Value="Thin"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--TextBox styles-->
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="CaretBrush" Value="{DynamicResource LightLighter}"/>
        <Setter Property="Foreground" Value="{DynamicResource LightLighter}"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border CornerRadius="1" Padding="2" BorderThickness="0,0,0,1.2">

                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>

                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource LightLighterColor}" />
                        </Border.BorderBrush>

                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PasswordBox style-->
    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="CaretBrush" Value="{DynamicResource LightLighter}"/>
        <Setter Property="Foreground" Value="{DynamicResource LightLighter}"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border CornerRadius="1" Padding="2" BorderThickness="0,0,0,1">
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>

                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFFFF4DE" />
                        </Border.BorderBrush>

                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Buttons style-->
    <Style x:Key="ButtonStyleWindows" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource LightGold}" />
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  Name="Border" Background="Transparent" Padding="5">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand" />

                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#FFFFEECA" Opacity="1" BlurRadius="5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Window style-->
    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border >
                        <Grid>
                            <Border Background="#FF171717" />

                            <!--The main window content-->
                            <Grid>
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Grid Grid.Column="0" Panel.ZIndex="1" Height="45" Background="{StaticResource GrayBlackDarker}">
                                    <!--Title-->
                                    <TextBlock Text="{Binding WindowTitle}" 
                                               Foreground="{DynamicResource LightGold}" 
                                               HorizontalAlignment="Center" 
                                               Margin="10"
                                               FontSize="15"/>
                                    <!--Window buttons-->
                                    <StackPanel Margin="1" 
                                                Orientation="Horizontal" 
                                                HorizontalAlignment="Right">
                                        <Button x:Name="MinimizeButt"  
                                                Background="Transparent" 
                                                Content="_" 
                                                Style="{DynamicResource ButtonStyleWindows}" 
                                                Click="MinimizeButt_Click" 
                                                Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                        <Button x:Name="MaximizeButt"
                                                Background="Transparent" 
                                                Content="{Binding IsMaxed}" 
                                                Style="{DynamicResource ButtonStyleWindows}" 
                                                Click="MaximizeButt_Click" 
                                                Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                        <Button x:Name="CloseButt" 
                                                Background="Transparent" 
                                                Content="X" 
                                                Margin="0,0,10,0"
                                                Style="{DynamicResource ButtonStyleWindows}" 
                                                Click="CloseButt_Click" 
                                                Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                    </StackPanel>
                                </Grid>
                                <Border Grid.Row="2" >
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome ResizeBorderThickness="5" CaptionHeight="40"/>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  Background="Transparent"
                  BorderBrush="{DynamicResource LightLighter}"
                  BorderThickness="0,0,0,1" 
                  
                 />
            <Path 
                  x:Name="Arrow"  
                  Fill="{DynamicResource LightLighter}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  Grid.Column="1"
                  Margin="5"
                />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" 
                Focusable="False" 
                Background="{TemplateBinding Background}" 
                HorizontalAlignment="Center"/>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource GrayBlackLighterer}"/>
        <Setter Property="FontWeight" Value="Thin"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" 
                             Margin="0,0,0,5"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{DynamicResource GrayBlack}"

                                BorderThickness="3"
                                BorderBrush="{DynamicResource GrayBlackDarker}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource GrayBlackLighter}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource LightGold}" />
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--<! – All the following is required to Re-Style the ScrollViewer, see 
             http://msdn2.microsoft.com/en-us/library/aa970847(VS.85).aspx
             http://msdn2.microsoft.com/en-us/library/ms742173(VS.85).aspx
             for the default Styles that the ScrollViewer has out of the box
         –>

    <! – Brushes used in Styling of ScrollViewer –>-->
    <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
    <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="NormalBrush" Color="#888" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#888" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
    <LinearGradientBrush x:Key="ListBoxBackgroundBrush"

            StartPoint="0,0" EndPoint="1,0.001">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="White" Offset="0.0" />
                <GradientStop Color="White" Offset="0.6" />
                <GradientStop Color="#DDDDDD" Offset="1.2"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="StandardBrush"

            StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
    <LinearGradientBrush x:Key="PressedBrush"

            StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--<! – SrollViewer ScrollBar Repeat Buttons (at each end) –>-->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
          Name="Border"
          Margin="1"
          CornerRadius="1"
          Background="Transparent"
          BorderThickness="0">
                        <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--SrollViewer ScrollBar Repeat Buttons (The part in the middle, not the thumb the long area between the buttons-->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<! – ScrollViewer ScrollBar Thumb, that part that can be dragged up/down or left/right Buttons –>-->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2" Background="{DynamicResource GrayBlackLighterWithHigherOpacity}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border
      Grid.RowSpan="3"
      CornerRadius="2"
      Background="Transparent" />
            <RepeatButton Grid.Row="0"
                           Style="{StaticResource ScrollBarLineButton}"
                           Height="18"
                           Command="ScrollBar.LineUpCommand"
                           Content="M 0 4 L 8 4 L 4 0 Z" 
                           />
            <Track
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="1,0,1,0"
          Background="{StaticResource HorizontalNormalBrush}"

          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton

          Style="{StaticResource ScrollBarPageButton}"

          Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton

      Grid.Row="3"
      Style="{StaticResource ScrollBarLineButton}"

      Height="18"
      Command="ScrollBar.LineDownCommand"

      Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>

    <!--<! – Style for overall  ScrollBar –>-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<! – Style for overall  ScrollViewer –>-->
    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="1"/>

                        <ScrollBar Name="PART_VerticalScrollBar"

            Value="{TemplateBinding VerticalOffset}"

            Maximum="{TemplateBinding ScrollableHeight}"

            ViewportSize="{TemplateBinding ViewportHeight}"

            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar"

            Orientation="Horizontal"

            Grid.Row="1"
            Grid.Column="1"

            Value="{TemplateBinding HorizontalOffset}"

            Maximum="{TemplateBinding ScrollableWidth}"

            ViewportSize="{TemplateBinding ViewportWidth}"

            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>